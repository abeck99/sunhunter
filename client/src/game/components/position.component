position,IPositionState,PositionComponent

export interface IPositionState {
  x?: number
  y?: number
}

export class PositionComponent extends Component<IPositionState, Physics, IComponents> {
  static defaultState = {
    x: 0,
    y: 0,
  }

  tick = (timeElapsed: number) => {
  }

  move = (dx: number, dy: number) => {
    const destX = this.state.x+dx
    const destY = this.state.y+dy

    const movementRay = {
      start: {x: this.state.x, y: this.state.y},
      end: {x: destX, y: destY},
    }

    const moveResult = this.world.physics.clipRay(movementRay)
    if (moveResult.point) {
      console.log('collided!')
      this.state.x = moveResult.point.x
      this.state.y = moveResult.point.y
    } else {
      this.state.x = destX
      this.state.y = destY
    }
  }
}
