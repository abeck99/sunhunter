sprite,ISpriteConfig,SpriteComponent

export interface ISpriteConfig {
  asset: IAsset
}

export class SpriteComponent extends Component<ISpriteConfig, IComponents> {
  sprite?: PIXI.Sprite

  static assetsToLoad = (config: ISpriteConfig): IAsset[] => {
    return [
      config.asset
    ]
  }

  hasWorldAndConfig = () => {
    this.hasWorldAndConfig_()
    this.sprite = new PIXI.Sprite(this.world.getTexture(this.config.asset))
    this.world.container.addChild(this.sprite)
  }

  init = (config: ISpriteConfig) => {
    this.init_(config)
  }

  addToWorld = (world: IWorld<IComponents>) => {
    this.addToWorld_(world)
  }

  removeFromWorld = (world: IWorld<IComponents>) => {
    this.removeFromWorld_(world)
  }

  tick = (timeElapsed: number) => {
    this.tick_(timeElapsed)
  }
}

const _: IComponentClass<ISpriteConfig, IComponents, SpriteComponent> = SpriteComponent
